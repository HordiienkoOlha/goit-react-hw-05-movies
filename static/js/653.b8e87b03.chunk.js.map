{"version":3,"file":"static/js/653.b8e87b03.chunk.js","mappings":"iPACA,EAA4B,0BAA5B,EAA6D,qBAA7D,EAA2F,uBAA3F,EAAgI,4BAAhI,EAAoK,sB,SCMrJ,SAASA,IACpB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAOXC,EAAQP,EAAaQ,IAAI,UAC/BC,EAAAA,EAAAA,YAAU,WACHF,GACCG,EAAAA,GAAsBH,GAAOI,KAAKP,KAEvC,CAACG,IACJ,IAAMK,EAAaT,EAAOU,QAE1B,OACA,iCACI,oBAASC,UAAWC,EAApB,UAEA,kBAAMD,UAAWC,EAAaC,SAjBb,SAAAC,GACjBA,EAAMC,iBACNjB,EAAgB,CAACM,MAAOU,EAAME,cAAcC,SAASb,MAAMc,SAe3D,WACI,kBACAC,KAAK,OACLC,KAAK,QACLT,UAAWC,KAEX,mBAAQO,KAAK,SAAS,aAAW,SAASR,UAAWC,EAArD,UACA,iBAAMD,UAAWC,EAAjB,UACI,SAAC,MAAD,cAKR,6BACCH,IACG,wBACCA,EAAWY,KAAI,YAAkC,IAA/BC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,eAAgBH,EAAU,EAAVA,KACnC,OACA,yBACI,SAAC,KAAD,CAAOI,MAAO,CAAEC,KAAMvB,EAASwB,SAAWxB,EAASyB,QAAUC,GAAE,kBAAaN,GAA5E,UACA,yBAAIC,EAAJ,IAAqBH,QAFhBE,e,sJC/ClB,IAAMO,EAAW,+BACXC,EAAU,mCACVC,EAAU,kCACVC,EACb,uFACaC,EAAiB,+E,mNCCvB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,UAAaN,EAAAA,GAAb,uCAAoDC,EAAAA,KADtE,cACCM,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiClC,GAAjC,uFACkB+B,IAAAA,IAAA,UAAaN,EAAAA,GAAb,iCAA8CC,EAAAA,GAA9C,kBAA+D1B,EAA/D,YADlB,cACCgC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBL,IAAAA,IAAA,UAAaN,EAAAA,GAAb,kBAA+BW,EAA/B,oBAAkDV,EAAAA,GAAlD,oBADlB,cACCM,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACkBL,IAAAA,IAAA,UAAaN,EAAAA,GAAb,kBAA+BW,EAA/B,4BAA0DV,EAAAA,GAA1D,oBADlB,cACCM,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAAiCF,GAAjC,uFACkBL,IAAAA,IAAA,UAAaN,EAAAA,GAAb,kBAA+BW,EAA/B,4BAA0DV,EAAAA,GAA1D,oBADlB,cACCM,EADD,yBAEEA,EAASC,MAFX,kEAtBPF,IAAAA,SAAAA,QAAyBN,EAAAA","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","constants/constants.jsx","services/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Movies_searchbar__uTZk4\",\"form\":\"Movies_form__mp42q\",\"button\":\"Movies_button__hVjwG\",\"buttonLabel\":\"Movies_buttonLabel__XagoV\",\"input\":\"Movies_input__OE3ef\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { BsSearch } from 'react-icons/bs';\n\nimport * as api from '../../services/api';\nimport styles from './Movies.module.css';\n\nexport default function Movies() {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const location = useLocation();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        setSearchParams({query: event.currentTarget.elements.query.value})\n        \n    }\n    const query = searchParams.get(\"query\")\n    useEffect(()=> {\n        if(query){\n            api.fetchSearchMovies(query).then(setMovies);\n        }\n    }, [query])\n    const moviesData = movies.results;\n\n    return (\n    <>\n        <section className={styles.searchbar}>\n            \n        <form className={styles.form} onSubmit={handleSubmit}>\n            <input\n            type=\"text\"\n            name=\"query\"\n            className={styles.input}\n            />\n            <button type=\"submit\" aria-label=\"Search\" className={styles.button}>\n            <span className={styles.buttonLabel}>\n                <BsSearch />\n            </span>\n            </button>\n        </form>\n        </section>\n        <section>\n        {moviesData && (\n            <ul>\n            {moviesData.map(({ id, original_title, name}) => {\n                return (\n                <li key={id}>\n                    <Link  state={{ from: location.pathname + location.search }} to={`/movies/${id}`}>\n                    <p>{original_title} {name}</p>\n                    </Link>\n                </li>\n                );\n            })}\n            </ul>\n        )}\n\n        </section>\n    </>\n    );\n}\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '90bfee2a572d35f95b357659a69aab32';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const ANOTHER_IMG =\n'https://michaelnakache.com/wp-content/uploads/2018/08/movie-poster-coming-soon-2.png';\nexport const ANOTHER_AVATAR = 'https://www.pinpng.com/pngs/m/341-3415688_no-avatar-png-transparent-png.png'\n","import axios from 'axios';\n\nimport {BASE_URL, API_KEY} from 'constants/constants'\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n  return response.data;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n\n// const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=90bfee2a572d35f95b357659a69aab32&query=cat&page=1`);\n\n"],"names":["Movies","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","location","useLocation","query","get","useEffect","api","then","moviesData","results","className","styles","onSubmit","event","preventDefault","currentTarget","elements","value","type","name","map","id","original_title","state","from","pathname","search","to","BASE_URL","API_KEY","IMG_URL","ANOTHER_IMG","ANOTHER_AVATAR","fetchTrendingMovies","axios","response","data","fetchSearchMovies","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}