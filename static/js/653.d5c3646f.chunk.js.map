{"version":3,"file":"static/js/653.d5c3646f.chunk.js","mappings":"2PACA,GAAgB,UAAY,0BAA0B,KAAO,qBAAqB,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,sB,SCO1P,SAASA,IACpB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAOXC,EAAQP,EAAaQ,IAAI,UAC/BC,EAAAA,EAAAA,YAAU,WACHF,GACCG,EAAAA,GAAsBH,GAAOI,KAAKP,KAEvC,CAACG,IACJ,IAAMK,EAAaT,EAAOU,QAE1B,OACA,iCACI,oBAASC,UAAWC,EAAAA,UAApB,UAEA,kBAAMD,UAAWC,EAAAA,KAAaC,SAjBb,SAAAC,GACjBA,EAAMC,iBACNjB,EAAgB,CAACM,MAAOU,EAAME,cAAcC,SAASb,MAAMc,SAe3D,WACI,kBACAC,KAAK,OACLC,KAAK,QACOT,UAAWC,EAAAA,MACXS,YAAY,yBAExB,mBAAQF,KAAK,SAAS,aAAW,SAASR,UAAWC,EAAAA,OAArD,UACA,iBAAMD,UAAWC,EAAAA,YAAjB,UACI,SAAC,MAAD,cAKR,6BACCH,IACG,eAAIE,UAAWC,EAAAA,KAAf,SACaH,EAAWa,KAAI,YAAkD,IAA/CC,EAA8C,EAA9CA,GAAIC,EAA0C,EAA1CA,eAAgBJ,EAA0B,EAA1BA,KAAMK,EAAoB,EAApBA,cAC/CC,EAASC,EAAAA,GAAUF,EACzB,OACA,eAAad,UAAWC,EAAAA,KAAxB,UACI,UAAC,KAAD,CAAOgB,MAAO,CAAEC,KAAM3B,EAAS4B,SAAW5B,EAAS6B,QAAUC,GAAE,kBAAaT,GAA5E,WACQ,gBAAKU,IAAKP,EAAQQ,IAAKV,KACvB,eAAGb,UAAWC,EAAAA,KAAd,UAA4BY,EAA5B,IAA8CJ,SAHjDG,e,sJClDlB,IAAMY,EAAW,+BACXC,EAAU,mCACVT,EAAU,kCACVU,EACb,uFACaC,EAAiB,+E,mNCCvB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,UAAaL,EAAAA,GAAb,uCAAoDC,EAAAA,KADtE,cACCK,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCvC,GAAjC,uFACkBoC,IAAAA,IAAA,UAAaL,EAAAA,GAAb,iCAA8CC,EAAAA,GAA9C,kBAA+DhC,EAA/D,YADlB,cACCqC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBL,IAAAA,IAAA,UAAaL,EAAAA,GAAb,kBAA+BU,EAA/B,oBAAkDT,EAAAA,GAAlD,oBADlB,cACCK,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACkBL,IAAAA,IAAA,UAAaL,EAAAA,GAAb,kBAA+BU,EAA/B,4BAA0DT,EAAAA,GAA1D,oBADlB,cACCK,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,uFACkBL,IAAAA,IAAA,UAAaL,EAAAA,GAAb,kBAA+BU,EAA/B,4BAA0DT,EAAAA,GAA1D,oBADlB,cACCK,EADD,yBAEEA,EAASC,MAFX,kEAtBPF,IAAAA,SAAAA,QAAyBL,EAAAA","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","constants/constants.jsx","services/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Movies_searchbar__uTZk4\",\"form\":\"Movies_form__mp42q\",\"button\":\"Movies_button__hVjwG\",\"input\":\"Movies_input__OE3ef\",\"title\":\"Movies_title__EqSqF\",\"list\":\"Movies_list__JEO-P\",\"item\":\"Movies_item__+Yifn\",\"link\":\"Movies_link__0oDWE\",\"text\":\"Movies_text__B4Vb7\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { BsSearch } from 'react-icons/bs';\n\nimport * as api from '../../services/api';\nimport { IMG_URL } from 'constants/constants';\nimport styles from './Movies.module.css';\n\nexport default function Movies() {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const location = useLocation();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        setSearchParams({query: event.currentTarget.elements.query.value})\n        \n    }\n    const query = searchParams.get(\"query\")\n    useEffect(()=> {\n        if(query){\n            api.fetchSearchMovies(query).then(setMovies);\n        }\n    }, [query])\n    const moviesData = movies.results;\n\n    return (\n    <>\n        <section className={styles.searchbar}>\n            \n        <form className={styles.form} onSubmit={handleSubmit}>\n            <input\n            type=\"text\"\n            name=\"query\"\n                        className={styles.input}\n                        placeholder=\"Search film here...\"\n            />\n            <button type=\"submit\" aria-label=\"Search\" className={styles.button}>\n            <span className={styles.buttonLabel}>\n                <BsSearch />\n            </span>\n            </button>\n        </form>\n        </section>\n        <section>\n        {moviesData && (\n            <ul className={styles.list}>\n                        {moviesData.map(({ id, original_title, name, backdrop_path }) => {\n                const poster = IMG_URL + backdrop_path;\n                return (\n                <li key={id} className={styles.item}>\n                    <Link  state={{ from: location.pathname + location.search }} to={`/movies/${id}`}>\n                            <img src={poster} alt={original_title}  />\n                            <p className={styles.text}>{original_title } {name}</p>\n                    </Link>\n                </li>\n                );\n            })}\n            </ul>\n        )}\n\n        </section>\n    </>\n    );\n}\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '90bfee2a572d35f95b357659a69aab32';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const ANOTHER_IMG =\n'https://michaelnakache.com/wp-content/uploads/2018/08/movie-poster-coming-soon-2.png';\nexport const ANOTHER_AVATAR = 'https://www.pinpng.com/pngs/m/341-3415688_no-avatar-png-transparent-png.png'\n","import axios from 'axios';\n\nimport {BASE_URL, API_KEY} from 'constants/constants'\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n  return response.data;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n"],"names":["Movies","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","location","useLocation","query","get","useEffect","api","then","moviesData","results","className","styles","onSubmit","event","preventDefault","currentTarget","elements","value","type","name","placeholder","map","id","original_title","backdrop_path","poster","IMG_URL","state","from","pathname","search","to","src","alt","BASE_URL","API_KEY","ANOTHER_IMG","ANOTHER_AVATAR","fetchTrendingMovies","axios","response","data","fetchSearchMovies","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}