{"version":3,"file":"static/js/888.dac5a1b9.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","constants/constants.jsx","services/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Loader_spinner__iDFIv\"};","import { Bars } from 'react-loader-spinner';\n\nimport s from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={s.spinner}>\n      <Bars heigth=\"100\" width=\"100\" color=\"grey\" ariaLabel=\"loading-indicator\" />\n    </div>\n  );\n};\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MovieDetails_section__3J5A0\",\"listGenres\":\"MovieDetails_listGenres__LvBS4\",\"itemGenres\":\"MovieDetails_itemGenres__Uj8xy\"};","import { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation, useNavigate,  } from 'react-router-dom';\nimport { BiArrowBack } from \"react-icons/bi\"\nimport * as api from '../../services/api';\n\nimport { IMG_URL, ANOTHER_IMG } from 'constants/constants';\nimport Loader from 'components/Loader';\nimport styles from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n\n  const [moviesDetails, setMoviesDetails] = useState([]);\n  const [loading, setLoading] = useState(false)\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setLoading(true)\n    api.fetchMovieDetails(movieId).then(setMoviesDetails).finally(setLoading(false))\n  }, [ movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = moviesDetails;\n  \n  const poster = IMG_URL + poster_path;\n\n  const releaseTranform = () => {\n        if (release_date === null) {\n      return;\n    }\n    const releaseDate = String(release_date).slice(0, 4);\n    const releaseYear = '(' + releaseDate + ')';\n    return releaseYear;\n  };\n  const voteAverageTransform = ()=> {\n    if (vote_average === null) {\n      return;\n    }\n    const voteAverage = parseInt(vote_average*10)\n    const votePercentage = String(voteAverage) + '%'\n    return votePercentage;\n  }\n  return (\n    <>\n    <button onClick={(()=> navigate(location?.state?.from??\"/\"))}><BiArrowBack/>Go back</button>\n      <section className={styles.section}>\n      \n        {loading && <Loader/>}\n        <div>\n          {poster_path ? (\n            <img src={poster} alt=\"Poster\"width={200} />\n          ) : (\n            <img src={ANOTHER_IMG} alt=\"Poster\" />\n          )}\n        </div>\n        <ul>\n          <li>\n            <h3>\n              {original_title} {name} {releaseTranform()}\n            </h3>\n            <p>{voteAverageTransform()}</p>\n          </li>\n          <li>\n            <h3>Overviews</h3>\n            <p>{overview}</p>\n          </li>\n          <li>\n            <h3>Genres</h3>\n            {genres && (\n              <ul className={styles.listGenres}>\n                {genres.map(({ id, name }) => {\n                  return (\n                    <li className={styles.itemGenres} key={id}>\n                      {name}\n                    </li>\n                  );\n                })}\n              </ul>\n            )}\n          </li>\n        </ul>\n      </section>\n      <section>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link state={location.state} to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link state={location.state} to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </section>\n    </>\n  );\n}\n\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '90bfee2a572d35f95b357659a69aab32';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const ANOTHER_IMG =\n'https://michaelnakache.com/wp-content/uploads/2018/08/movie-poster-coming-soon-2.png';\nexport const ANOTHER_AVATAR = 'https://www.pinpng.com/pngs/m/341-3415688_no-avatar-png-transparent-png.png'\n","import axios from 'axios';\n\nimport {BASE_URL, API_KEY} from 'constants/constants'\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n  return response.data;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n"],"names":["className","s","heigth","width","color","ariaLabel","MovieDetails","useState","moviesDetails","setMoviesDetails","loading","setLoading","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","api","then","finally","poster_path","original_title","name","release_date","vote_average","overview","genres","poster","IMG_URL","onClick","state","from","styles","Loader","src","alt","ANOTHER_IMG","String","slice","releaseTranform","voteAverage","parseInt","voteAverageTransform","map","id","to","BASE_URL","API_KEY","ANOTHER_AVATAR","fetchTrendingMovies","axios","response","data","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}